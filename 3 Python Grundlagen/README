3.0 Dein erstes Python-Programm

3.1 Python als Taschenrechner
3.1.1 Rechenarten
3.1.2 Conversion & Kommentare
3.1.3 Reihenfolge der Rechenschritte
3.1.4 Übungen
3.1.5 Ermittlung von Wirtschaftsvariablen

3.2 Strings & String-Funktionen
3.2.1 Python-Namenskonventionen für Variablen
3.2.2 Variablen mit String-Werten anlegen
3.2.3 Konvertierung von/zu Strings
3.2.4 Strings verbinden (Concatenation)
3.2.5 Strings formatieren
3.2.6 Escape-Sequenzen
3.2.7 Indexierung und Splitten von Strings
3.2.8 User-Input verarbeiten
3.2.9 Die wichtigsten String-Funktionen
3.2.10 Weitere wichtige String-Funktionen
3.2.11 Die wichtigsten String-Funktionen mit boolschen Rückgabewerten
3.2.12 in, not in, is, is not (Membership & Identity Operators)
3.2.13 Abschließende Aufgaben zu Strings

3.3 Conditions - Bedingungen
3.3.1 If - Wenn
3.3.2 Vergleichsoperatoren
3.3.3 Flow-Charts
3.3.4 Else - Sonst
3.3.5 Elif - Sonst Wenn
3.3.6 Pass - Überspringen
3.3.7 Truthiness & Falsiness
3.3.8 Die logischen Operatoren and, not & or
3.3.9 Multiple Elifs
3.3.10 Verschachtelte/nested If-Statements
3.3.11 Abschließende Aufgaben zu Conditions

3.4 Lists
3.4.1 List - Erstellung & Vorteile
3.4.2 Indexierung von Listen
3.4.3 Funktionen für List & andere Datentypen
3.4.4 Spezielle List-Funktionen
3.4.5 Kopieren & Sortieren von Listen
3.4.6 Verschachtelte Listen & verschachteltes Slicing
3.4.7 Listen verbinden
3.4.8 Abschließende Aufgaben zu Lists

3.5 Dictionaries
3.5.1 Was ist ein Dictionary, wie wird es erstellt?
3.5.2 Auf Daten in Dictionarys zugreifen
3.5.3 Dictionary & List im Vergleich
3.5.4 Die wichtigsten Dictionary-Funktionen
3.5.5 Dictionarys vergleichen & sortieren
3.5.6 Abschließende Aufgabe zu Dictionarys

3.6 Loops & Funktionen
3.6.1 For-Loop & die Statements break, continue, pass, else
3.6.2 Besonderheiten zu For-Loops mit Dictionarys
3.6.3 Besonderheiten zu For-Loops mit Listen
3.6.4 List-Comprehension
3.6.5 Dictionary- & Set-Comprehension
3.6.6 Nested For-Loops mit nested Iterables
3.6.7 Nested Comprehensions
3.6.8 Generators
3.6.9 While-Loop
3.6.10 Eigene Funktionen definieren I - Grundlagen
3.6.11 Eigene Funktionen definieren II - Scope, Conditions, Loops
3.6.12 Eigene Funktionen definieren III - args & kwargs
3.6.13 Eigene Funktionen definieren IV - Decorators
3.6.14 Lambda-Funktionen
3.6.15 Abschließende Aufgaben zu Loops & Funktionen
